---
title: "Names Sandbox"
format: html
---

# Set up

```{r setup}
options(scipen = 999)
library(readr)
library(readxl)
library(tidyverse); theme_set(theme_bw())
library(broom)
library(flextable)

names_combined <- read_csv("data/names_combined.csv", show_col_types = FALSE)
```


## Long-standing names

Most long-standing popularity

```{r}
names_combined |> 
  group_by(region) |> #summarise(howmany = n_distinct(year))
  mutate(totalyears = n_distinct(year),
         totalcount = sum(number,na.rm = TRUE)) |> # porter supervisor 85368
  group_by(.add = TRUE, name,totalyears,totalcount,asab) |> 
  summarise(.groups = "drop",
            attestations = n(),
            count = sum(number)) |> 
  ungroup() |> 
  mutate(longstandingness = attestations/totalyears,
         percent = count/totalcount) |> 
  #right_join(names_combined,
  #           by = join_by(region, name, asab)) |> 
  arrange(region, -attestations) |> 
  filter(longstandingness == 1) |> 
  select(-c(percent, totalcount, attestations, longstandingness)) |> 
  pivot_wider(names_from = asab,
              values_from = count) |> 
  filter(!is.na(`M`), !is.na(`F`)) |> 
  pull(name) |> unique() -> longstanding.unisex.names
```



```{r fig.width=18, fig.height=6}
names_combined |> 
  group_by(region) |> #summarise(howmany = n_distinct(year))
  mutate(totalyears = n_distinct(year),
         totalcount = sum(number,na.rm = TRUE)) |> # porter supervisor 85368
  group_by(.add = TRUE, name,totalyears,totalcount,asab) |> 
  summarise(.groups = "drop",
            attestations = n(),
            count = sum(number)) |> 
  ungroup() |> 
  mutate(longstandingness = attestations/totalyears,
         percent = count/totalcount) |> 
  right_join(names_combined,
             by = join_by(region, name, asab)) |> 
  filter(longstandingness == 1, 
         percent >= 0.01) |> arrange(year) |> 
  ggplot(aes(x = year, y = number, group = name, colour = asab)) +
    geom_path() +
    facet_grid(region ~ name,
               scales = "free_y") +
    NULL

names_combined |> 
  group_by(region) |> 
  mutate(totalyears = n_distinct(year),
         totalcount = sum(number,na.rm = TRUE)) |> 
  group_by(.add = TRUE, name,totalyears,totalcount,asab) |> 
  summarise(.groups = "drop",
            attestations = n(),
            count = sum(number)) |> 
  ungroup() |> 
  mutate(longstandingness = attestations/totalyears,
         percent = count/totalcount) |> 
  right_join(names_combined,
             by = join_by(region, name, asab)) |> 
  filter(longstandingness == 1, 
         percent >= 0.0075,
         percent < 0.01) |> arrange(year) |> 
  ggplot(aes(x = year, y = number, group = name, colour = asab)) +
    geom_path() +
    facet_grid(region ~ name,
               scales = "free_y") +
    NULL
```

AMAB names that have appeared in the USA data every year:
```{r}
names_combined |> 
  filter(region == "USA",
         number > 50) |> 
  group_by(name, asab) |> 
  summarise(.groups = "drop",
            count = n()) |> filter(count >= 143, asab == "M") |> 
  pull(name)
```

Long-standing names that also appear as both AMAB and AFAB, with at least 50 tokens (to help weed out obvious data entry errors, although this is not fool-proof):
```{r}
names_combined |> 
  filter(region == "USA",
         number > 50) |> 
  group_by(name, asab) |> 
  summarise(.groups = "drop",
            count = n()) |> filter(count >= 143) |> 
  pull(name) -> most_longstanding_names

names_combined |> 
  filter(region == "USA",
         name %in% most_longstanding_names)
```

```{r}
names_combined |> filter(#region == "USA", 
                         #number > 50,
                         asab == "F") -> afab_names
names_combined |> filter(#region == "USA", 
                         #number > 50,
                         asab == "M") -> amab_names
intersect(afab_names |> 
            #filter(number > 150) |> 
            pull(name), 
          amab_names |> 
            #filter(number > 150) |> 
            pull(name)) -> unisex_names

intersect(unisex_names, most_longstanding_names)
```



```{r}
names_combined |> 
  filter(region == "USA",
         number > 50) |> 
  group_by(name, asab) |> 
  summarise(.groups = "drop",
            count = n()) |> 
  full_join(names_combined |> filter(region == "USA"),
            by = join_by(name, asab)) |> 
  filter(count >=143) |>
  ggplot(aes(x = year,
             y = number,
             color = name,
             group = name)) +
  geom_line() +
  facet_wrap(~asab) +
  theme(legend.position = "none") +
  NULL
```


# Unisex names

```{r}
names_combined |> 
  pivot_wider(names_from = "asab", values_from = c(number,proportion,rank)) |>
  filter(name %in% unisex_names,
         !is.na(proportion_M),
         !is.na(proportion_F),
         proportion_M > 0.0005,
         proportion_F > 0.0005) |> 
  ggplot(aes(x = proportion_M, 
             y = proportion_F,
             color = region)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_point() +
  NULL
```


```{r, fig.height=12, fig.width=12}
names_combined |> 
  pivot_wider(names_from = "asab", values_from = c(number,proportion,rank)) |>
  filter(name %in% unisex_names,
         !is.na(proportion_M),
         !is.na(proportion_F),
         number_M >= 3,
         number_F >= 3,
         #proportion_M > 0.0001,
         #proportion_F > 0.0001,
         #name != "Mary",
         name != "Baby"
         ) |> 
  group_by(name, region) |> 
  summarise(proportion_M = max(proportion_M),
            proportion_F = max(proportion_F),
            .groups = "drop") -> prop.labels

names_combined |> 
  pivot_wider(names_from = "asab", values_from = c(number,proportion,rank)) |>
  filter(name %in% unisex_names,
         !is.na(proportion_M),
         !is.na(proportion_F),
         proportion_M > 0.0005,
         proportion_F > 0.0005,
         name != "Mary",
         abs(number_M/number_F) > 0.25,
         abs(number_F/number_M) > 0.25) |> 
  ggplot(aes(x = proportion_M, 
             y = proportion_F,
             color = name)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_line(aes(group = name)) +
  geom_point() +
  geom_label(inherit.aes = FALSE,
             data = prop.labels,
             aes(x = proportion_M+0.0001,
                 y = proportion_F+0.0001,
                 color = name,
                 label = name),
             alpha = .5) +
  facet_wrap(~region, scales = "free") +
  theme(legend.position = "none") +
  scale_x_log10() +
  scale_y_log10() +
  NULL
```


```{r, fig.height=12, fig.width=16, warning=FALSE}
names_combined |> 
  filter(name %in% c("Ashley","Ash","Ashleigh")) |> 
  pivot_wider(names_from = "asab", values_from = c(number,proportion,rank),values_fill = 0) |> 
  ggplot(aes(x = number_M, 
             y = number_F,
             color = name,
             label = region)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_path(aes(group = name)) +
  ggrepel::geom_text_repel(aes(label = year), 
                           size = 2, 
                           color = "black", 
                           alpha = .5,max.overlaps = 20,) +
  xlab("proportion of the AMAB population registered with this name in a given year") +
  ylab("proportion of the AFAB population registered with this name in a given year") +
  scale_x_log10() +
  scale_y_log10() +
  scale_color_manual(values = c("gold","red","blue")) +
  #scale_color_viridis_d(option = "turbo") +
  facet_wrap(~region) + #
  NULL
```

```{r, fig.height=12, fig.width=16, warning=FALSE}
names_combined |> 
  filter(name %in% c("Charlie","Charley")) |> 
  pivot_wider(names_from = "asab", values_from = c(number,proportion,rank),values_fill = 0) |> 
  ggplot(aes(x = number_M, 
             y = number_F,
             color = name,
             label = region)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_path(aes(group = name)) +
  ggrepel::geom_text_repel(aes(label = year), 
                           size = 2, 
                           color = "black", 
                           alpha = .5,max.overlaps = 20,) +
  xlab("proportion of the AMAB population registered with this name in a given year") +
  ylab("proportion of the AFAB population registered with this name in a given year") +
  scale_x_log10() +
  scale_y_log10() +
  scale_color_manual(values = c("gold","red","blue")) +
  #scale_color_viridis_d(option = "turbo") +
  facet_wrap(~region) + #
  NULL
```



```{r, fig.height=12, fig.width=16, warning=FALSE}
names_combined |> 
  filter(name %in% c("Jordan","Taylor")) |> 
  pivot_wider(names_from = "asab", values_from = c(number,proportion,rank),values_fill = 0) |> 
  ggplot(aes(x = number_M, 
             y = number_F,
             color = name,
             label = region)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_path(aes(group = name)) +
  ggrepel::geom_text_repel(aes(label = year), 
                           size = 2, 
                           color = "black", 
                           alpha = .5,max.overlaps = 20,) +
  xlab("proportion of the AMAB population registered with this name in a given year") +
  ylab("proportion of the AFAB population registered with this name in a given year") +
  scale_x_log10() +
  scale_y_log10() +
  scale_color_manual(values = c("gold","red","blue","green")) +
  #scale_color_viridis_d(option = "turbo") +
  facet_wrap(~region) + #
  NULL
```


```{r, fig.height=12, fig.width=16, warning=FALSE}
names_combined |> 
  filter(name %in% longstanding.unisex.names) |> 
  pivot_wider(names_from = "asab", values_from = c(number,proportion,rank),values_fill = 0) |> 
  filter(number_F > 0, number_M > 0) |> 
  ggplot(aes(x = number_M, 
             y = number_F,
             color = region,
             label = name)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_path(aes(group = name)) +
  ggrepel::geom_text_repel(aes(label = year), 
                           size = 2, 
                           color = "black", 
                           alpha = .5,max.overlaps = 20,) +
  xlab("proportion of the AMAB population registered with this name in a given year") +
  ylab("proportion of the AFAB population registered with this name in a given year") +
  scale_x_log10() +
  scale_y_log10() +
  #scale_color_manual(values = c("#dbedff","#80f2ee","#75dfb8","#6acc81","#78a656","#86802b","#945900","#802600","#5e0000")) +
  scale_color_viridis_d(option = "turbo", begin = 0.95, end = 0.1) + #plasma
  facet_wrap(~name) + #
  NULL
```


```{r, warning=FALSE, fig.width=12, fig.height=6}
names_combined |> 
  mutate(asab = case_when(asab == "F" ~ "AFAB", asab == "M" ~ "AMAB", TRUE ~ "X")) |> 
  pivot_wider(names_from = asab,
              values_from = c(number, rank, proportion)) |> 
  filter(!is.na(number_AFAB),!is.na(number_AMAB)) |> #pull(name) |> unique()
  #filter(name == "Addison") |> 
  filter(name == "Marion") %>%
  ggplot(aes(x = proportion_AMAB,
             y = proportion_AFAB,
             colour = region,
             group = region)) +
  geom_abline(slope = 1, intercept = 0) +
  geom_path() +
  {if (TRUE) geom_point(aes(x = proportion_AFAB, y = proportion_AMAB), color = NA)} +
  ggrepel::geom_text_repel(aes(label = year), 
                           size = 2, 
                           color = "black", 
                           alpha = .5,
                           max.overlaps = 10) +
  {if (!TRUE) scale_y_log10(labels = scales::percent_format())} + 
  {if (!TRUE) scale_x_log10(labels = scales::percent_format())} +
  {if (!FALSE) scale_y_continuous(labels = scales::percent_format())} + 
  {if (!FALSE) scale_x_continuous(labels = scales::percent_format())} +
  scale_color_viridis_d(option = "turbo", begin = .95, end = .1) +
  coord_equal(ratio = 1) +
  NULL
```




```{r warning=FALSE}
names_combined |> 
  mutate(asab = case_when(asab == "F" ~ "AFAB", asab == "M" ~ "AMAB", TRUE ~ "X")) |> 
  pivot_wider(names_from = asab,
              values_from = c(number, rank, proportion),
              values_fill = 0) |> 
  #filter(!is.na(number_AFAB),!is.na(number_AMAB)) |> 
  filter(name == "Malak" | name == "Malek"| name == "Malik") %>%
  ggplot(aes(x = proportion_AMAB,
             y = proportion_AFAB,
             colour = region,
             #linetype = name,
             group = interaction(region,name))) +
  geom_abline(slope = 1, intercept = 0) +
  geom_path() +
  {if (TRUE) geom_point(aes(x = proportion_AFAB, y = proportion_AMAB), color = NA)} +
  ggrepel::geom_text_repel(aes(label = year), 
                           size = 2, 
                           color = "black", 
                           alpha = .5,
                           max.overlaps = 10) +
  scale_y_log10(labels = scales::percent_format()) + # , limits = c(0.000001, 0.013)
  scale_x_log10(labels = scales::percent_format()) + # , limits = c(0.000001, 0.013)
  scale_color_viridis_d(option = "turbo", begin = .95, end = .1) +
  coord_equal(ratio = 1) +
  facet_wrap(~name) +
  NULL
```

